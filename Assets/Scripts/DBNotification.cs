using UnityEngine;
using System.Collections;

//public enum DBNotificationType
//{
//	DebuggerQuit, // we don't need a class, this is just an event
//    DebuggerError, // needs a class
//    ProgramError, // needs a class
//    ReadLine,     // event
//    Write,        // just a string
//    InteractionBegin // event
//};

namespace DBNotif {
    public class InteractionArgs {
        public InteractionArgs(string filename_, string lineno_, string line_) {
            this.filename = filename_;
            this.lineno = lineno_;
            this.line = line_;
        }

        public string filename { get; set; }
        public string lineno { get; set; }
        public string line { get; set; }
    }

    public class DebuggerError {
        public DebuggerError(string code_, string message_) {
            this.code = code;
            this.message = message_;
        }

        public override string ToString() // autogenerated by Visual Studio :D
        {
            return string.Format("[DebuggerError: code={0}, message={1}]", code, message);
        }

        public string code {get;set;}
        public string message {get;set;}
    }

    public class ProgramError {
        public ProgramError(string title_, string type_, string val_, string trace_, string message_) {
            this.title = title_;
            this.type = type_;
            this.val = val_;
            this.trace = trace_;
            this.message = message_;
        }

        public override string ToString()
        {
            return string.Format("[ProgramError: title={0}, type={1}, val={2}, trace={3}, message={4}]", title, type, val, trace, message);
        }

        public string title {get;set;}
        public string type {get;set;}
        public string val {get;set;}
        public string trace {get;set;}
        public string message {get;set;}
    }
}
